[{"calls":0,"declarations":1,"func":"function Tag(impl, conf, innerHTML) {\n    var self = riot.observable(this), opts = inherit(conf.opts) || {}, dom = mkdom(impl.tmpl), parent = conf.parent, isLoop = conf.isLoop, hasImpl = conf.hasImpl, item = cleanUpData(conf.item), expressions = [], childTags = [], root = conf.root, fn = impl.fn, tagName = root.tagName.toLowerCase(), attr = {}, propsInSyncWithParent = [];\n    if (fn && root._tag)\n        root._tag.unmount(true);\n    this.isMounted = false;\n    root.isLoop = isLoop;\n    root._tag = this;\n    defineProperty(this, '_riot_id', ++__uid);\n    extend(this, {\n        parent: parent,\n        root: root,\n        opts: opts,\n        tags: {}\n    }, item);\n    each(root.attributes, function (el) {\n        var val = el.value;\n        if (tmpl.hasExpr(val))\n            attr[el.name] = val;\n    });\n    if (dom.innerHTML && !/^(select|optgroup|table|tbody|tr|col(?:group)?)$/.test(tagName))\n        dom.innerHTML = replaceYield(dom.innerHTML, innerHTML);\n    function updateOpts() {\n        var ctx = hasImpl && isLoop ? self : parent || self;\n        each(root.attributes, function (el) {\n            opts[toCamel(el.name)] = tmpl(el.value, ctx);\n        });\n        each(Object.keys(attr), function (name) {\n            opts[toCamel(name)] = tmpl(attr[name], ctx);\n        });\n    }\n    function normalizeData(data) {\n        for (var key in item) {\n            if (typeof self[key] !== T_UNDEF && isWritable(self, key))\n                self[key] = data[key];\n        }\n    }\n    function inheritFromParent() {\n        if (!self.parent || !isLoop)\n            return;\n        each(Object.keys(self.parent), function (k) {\n            var mustSync = !contains(RESERVED_WORDS_BLACKLIST, k) && contains(propsInSyncWithParent, k);\n            if (typeof self[k] === T_UNDEF || mustSync) {\n                if (!mustSync)\n                    propsInSyncWithParent.push(k);\n                self[k] = self.parent[k];\n            }\n        });\n    }\n    defineProperty(this, 'update', function (data) {\n        data = cleanUpData(data);\n        inheritFromParent();\n        if (data && typeof item === T_OBJECT) {\n            normalizeData(data);\n            item = data;\n        }\n        extend(self, data);\n        updateOpts();\n        self.trigger('update', data);\n        update(expressions, self);\n        rAF(function () {\n            self.trigger('updated');\n        });\n        return this;\n    });\n    defineProperty(this, 'mixin', function () {\n        each(arguments, function (mix) {\n            var instance;\n            mix = typeof mix === T_STRING ? riot.mixin(mix) : mix;\n            if (isFunction(mix)) {\n                instance = new mix();\n                mix = mix.prototype;\n            } else\n                instance = mix;\n            each(Object.getOwnPropertyNames(mix), function (key) {\n                if (key != 'init')\n                    self[key] = isFunction(instance[key]) ? instance[key].bind(self) : instance[key];\n            });\n            if (instance.init)\n                instance.init.bind(self)();\n        });\n        return this;\n    });\n    defineProperty(this, 'mount', function () {\n        updateOpts();\n        if (fn)\n            fn.call(self, opts);\n        parseExpressions(dom, self, expressions);\n        toggle(true);\n        if (impl.attrs || hasImpl) {\n            walkAttributes(impl.attrs, function (k, v) {\n                setAttr(root, k, v);\n            });\n            parseExpressions(self.root, self, expressions);\n        }\n        if (!self.parent || isLoop)\n            self.update(item);\n        self.trigger('before-mount');\n        if (isLoop && !hasImpl) {\n            self.root = root = dom.firstChild;\n        } else {\n            while (dom.firstChild)\n                root.appendChild(dom.firstChild);\n            if (root.stub)\n                self.root = root = parent.root;\n        }\n        if (isLoop)\n            parseNamedElements(self.root, self.parent, null, true);\n        if (!self.parent || self.parent.isMounted) {\n            self.isMounted = true;\n            self.trigger('mount');\n        } else\n            self.parent.one('mount', function () {\n                if (!isInStub(self.root)) {\n                    self.parent.isMounted = self.isMounted = true;\n                    self.trigger('mount');\n                }\n            });\n    });\n    defineProperty(this, 'unmount', function (keepRootTag) {\n        var el = root, p = el.parentNode, ptag;\n        self.trigger('before-unmount');\n        __virtualDom.splice(__virtualDom.indexOf(self), 1);\n        if (this._virts) {\n            each(this._virts, function (v) {\n                v.parentNode.removeChild(v);\n            });\n        }\n        if (p) {\n            if (parent) {\n                ptag = getImmediateCustomParentTag(parent);\n                if (isArray(ptag.tags[tagName]))\n                    each(ptag.tags[tagName], function (tag, i) {\n                        if (tag._riot_id == self._riot_id)\n                            ptag.tags[tagName].splice(i, 1);\n                    });\n                else\n                    ptag.tags[tagName] = undefined;\n            } else\n                while (el.firstChild)\n                    el.removeChild(el.firstChild);\n            if (!keepRootTag)\n                p.removeChild(el);\n            else\n                remAttr(p, 'riot-tag');\n        }\n        self.trigger('unmount');\n        toggle();\n        self.off('*');\n        self.isMounted = false;\n        root._tag = null;\n    });\n    function toggle(isMount) {\n        each(childTags, function (child) {\n            child[isMount ? 'mount' : 'unmount']();\n        });\n        if (parent) {\n            var evt = isMount ? 'on' : 'off';\n            if (isLoop)\n                parent[evt]('unmount', self.unmount);\n            else\n                parent[evt]('update', self.update)[evt]('unmount', self.unmount);\n        }\n    }\n    parseNamedElements(dom, this, childTags);\n}","calling":["observable","inherit","mkdom","cleanUpData","toLowerCase","unmount","defineProperty","extend","each","hasExpr","test","replaceYield","tmpl","keys","isWritable","contains","inheritFromParent","updateOpts","trigger","update","rAF","isFunction","getOwnPropertyNames","call","parseExpressions","toggle","parseNamedElements","one","isInStub","splice","indexOf","off",null],"weight":33,"category":1,"name":"Tag"},{"calls":1,"declarations":1,"func":"function _each(dom, parent, expr) {\n    remAttr(dom, 'each');\n    var mustReorder = typeof getAttr(dom, 'no-reorder') !== T_STRING || remAttr(dom, 'no-reorder'), tagName = getTagName(dom), impl = __tagImpl[tagName] || { tmpl: dom.outerHTML }, useRoot = SPECIAL_TAGS_REGEX.test(tagName), root = dom.parentNode, ref = document.createTextNode(''), child = getTag(dom), isOption = /option/gi.test(tagName), tags = [], oldItems = [], hasKeys, isVirtual = dom.tagName == 'VIRTUAL';\n    expr = tmpl.loopKeys(expr);\n    root.insertBefore(ref, dom);\n    parent.one('before-mount', function () {\n        dom.parentNode.removeChild(dom);\n        if (root.stub)\n            root = parent.root;\n    }).on('update', function () {\n        var items = tmpl(expr.val, parent), frag = document.createDocumentFragment();\n        if (!isArray(items)) {\n            hasKeys = items || false;\n            items = hasKeys ? Object.keys(items).map(function (key) {\n                return mkitem(expr, key, items[key]);\n            }) : [];\n        }\n        items.forEach(function (item, i) {\n            var _mustReorder = mustReorder && item instanceof Object, oldPos = oldItems.indexOf(item), pos = ~oldPos && _mustReorder ? oldPos : i, tag = tags[pos];\n            item = !hasKeys && expr.key ? mkitem(expr, item, i) : item;\n            if (!_mustReorder && !tag || _mustReorder && !~oldPos || !tag) {\n                tag = new Tag(impl, {\n                    parent: parent,\n                    isLoop: true,\n                    hasImpl: !!__tagImpl[tagName],\n                    root: useRoot ? root : dom.cloneNode(),\n                    item: item\n                }, dom.innerHTML);\n                tag.mount();\n                if (isVirtual)\n                    tag._root = tag.root.firstChild;\n                if (i == tags.length) {\n                    if (isVirtual)\n                        addVirtual(tag, frag);\n                    else\n                        frag.appendChild(tag.root);\n                } else {\n                    if (isVirtual)\n                        addVirtual(tag, root, tags[i]);\n                    else\n                        root.insertBefore(tag.root, tags[i].root);\n                    oldItems.splice(i, 0, item);\n                }\n                tags.splice(i, 0, tag);\n                pos = i;\n            } else\n                tag.update(item);\n            if (pos !== i && _mustReorder) {\n                if (isVirtual)\n                    moveVirtual(tag, root, tags[i], dom.childNodes.length);\n                else\n                    root.insertBefore(tag.root, tags[i].root);\n                if (expr.pos)\n                    tag[expr.pos] = i;\n                tags.splice(i, 0, tags.splice(pos, 1)[0]);\n                oldItems.splice(i, 0, oldItems.splice(pos, 1)[0]);\n                if (!child)\n                    moveNestedTags(tag, i);\n            }\n            tag._item = item;\n            defineProperty(tag, '_parent', parent);\n        }, true);\n        unmountRedundant(items, tags);\n        if (isOption)\n            root.appendChild(frag);\n        else\n            root.insertBefore(frag, ref);\n        if (child)\n            parent.tags[tagName] = tags;\n        oldItems = items.slice();\n    });\n}","calling":["remAttr","getTagName","test","createTextNode","getTag","loopKeys","insertBefore","on","tmpl","createDocumentFragment","isArray","forEach","indexOf","update","defineProperty","unmountRedundant","appendChild","slice"],"weight":18,"category":0,"name":"_each"},{"calls":5,"declarations":1,"func":"function update(expressions, tag) {\n    each(expressions, function (expr, i) {\n        var dom = expr.dom, attrName = expr.attr, value = tmpl(expr.expr, tag), parent = expr.dom.parentNode;\n        if (expr.bool)\n            value = value ? attrName : false;\n        else if (value == null)\n            value = '';\n        if (parent && parent.tagName == 'TEXTAREA') {\n            value = ('' + value).replace(/riot-/g, '');\n            parent.value = value;\n        }\n        if (expr.value === value)\n            return;\n        expr.value = value;\n        if (!attrName) {\n            dom.nodeValue = '' + value;\n            return;\n        }\n        remAttr(dom, attrName);\n        if (isFunction(value)) {\n            setEventHandler(attrName, value, dom, tag);\n        } else if (attrName == 'if') {\n            var stub = expr.stub, add = function () {\n                    insertTo(stub.parentNode, stub, dom);\n                }, remove = function () {\n                    insertTo(dom.parentNode, dom, stub);\n                };\n            if (value) {\n                if (stub) {\n                    add();\n                    dom.inStub = false;\n                    if (!isInStub(dom)) {\n                        walk(dom, function (el) {\n                            if (el._tag && !el._tag.isMounted)\n                                el._tag.isMounted = !!el._tag.trigger('mount');\n                        });\n                    }\n                }\n            } else {\n                stub = expr.stub = stub || document.createTextNode('');\n                if (dom.parentNode)\n                    remove();\n                else\n                    (tag.parent || tag).one('updated', remove);\n                dom.inStub = true;\n            }\n        } else if (/^(show|hide)$/.test(attrName)) {\n            if (attrName == 'hide')\n                value = !value;\n            dom.style.display = value ? '' : 'none';\n        } else if (attrName == 'value') {\n            dom.value = value;\n        } else if (startsWith(attrName, RIOT_PREFIX) && attrName != RIOT_TAG) {\n            if (value)\n                setAttr(dom, attrName.slice(RIOT_PREFIX.length), value);\n        } else {\n            if (expr.bool) {\n                dom[attrName] = value;\n                if (!value)\n                    return;\n            }\n            if (value && value != 0 && typeof value !== T_OBJECT)\n                setAttr(dom, attrName, value);\n        }\n    });\n}","calling":["each","tmpl","remAttr","isFunction","test","startsWith"],"weight":6,"category":1,"name":"update"},{"calls":1,"declarations":1,"func":"function setNamed(dom, parent, keys) {\n    var key = getNamedKey(dom), add = function (value) {\n            if (contains(keys, key))\n                return;\n            var isArr = isArray(value);\n            if (!value)\n                parent[key] = dom;\n            else if (!isArr || isArr && !contains(value, dom)) {\n                if (isArr)\n                    value.push(dom);\n                else\n                    parent[key] = [\n                        value,\n                        dom\n                    ];\n            }\n        };\n    if (!key)\n        return;\n    if (tmpl.hasExpr(key))\n        parent.one('updated', function () {\n            key = getNamedKey(dom);\n            add(parent[key]);\n        });\n    else\n        add(parent[key]);\n}","calling":["getNamedKey","contains","isArray","hasExpr","one","add"],"weight":6,"category":0,"name":"setNamed"},{"calls":2,"declarations":1,"func":"function parseExpressions(root, tag, expressions) {\n    function addExpr(dom, val, extra) {\n        if (tmpl.hasExpr(val)) {\n            var expr = {\n                dom: dom,\n                expr: val\n            };\n            expressions.push(extend(expr, extra));\n        }\n    }\n    walk(root, function (dom) {\n        var type = dom.nodeType;\n        if (type == 3 && dom.parentNode.tagName != 'STYLE')\n            addExpr(dom, dom.nodeValue);\n        if (type != 1)\n            return;\n        var attr = getAttr(dom, 'each');\n        if (attr) {\n            _each(dom, tag, attr);\n            return false;\n        }\n        each(dom.attributes, function (attr) {\n            var name = attr.name, bool = name.split('__')[1];\n            addExpr(dom, attr.value, {\n                attr: bool || name,\n                bool: bool\n            });\n            if (bool) {\n                remAttr(dom, name);\n                return false;\n            }\n        });\n        if (getTag(dom))\n            return false;\n    });\n}","calling":["hasExpr","walk","addExpr","getAttr","each","getTag"],"weight":6,"category":0,"name":"parseExpressions"},{"calls":3,"declarations":2,"func":"function _create(str) {\n    var expr = _getTmpl(str);\n    if (expr.slice(0, 11) !== 'try{return ')\n        expr = 'return ' + expr;\n    return new Function('E', expr + ';');\n}","calling":["split","cvt","RegExp","_getTmpl"],"weight":4,"category":0,"name":"_create"},{"calls":0,"declarations":1,"func":"function _mkdom(html) {\n    var match = html && html.match(/^\\s*<([-\\w]+)/), tagName = match && match[1].toLowerCase(), rootTag = rootEls[tagName] || GENERIC, el = mkEl(rootTag);\n    el.stub = true;\n    if (checkIE && tagName && (match = tagName.match(SPECIAL_TAGS_REGEX)))\n        ie9elem(el, html, tagName, !!match[1]);\n    else\n        el.innerHTML = html;\n    return el;\n}","calling":["match","toLowerCase","mkEl","ie9elem"],"weight":4,"category":0,"name":"_mkdom"},{"calls":1,"declarations":1,"func":"function moveNestedTags(child, i) {\n    Object.keys(child.tags).forEach(function (tagName) {\n        var tag = child.tags[tagName];\n        if (isArray(tag))\n            each(tag, function (t) {\n                moveChildTag(t, tagName, i);\n            });\n        else\n            moveChildTag(tag, tagName, i);\n    });\n}","calling":["forEach","isArray","each","moveChildTag"],"weight":4,"category":0,"name":"moveNestedTags"},{"calls":2,"declarations":1,"func":"function start(autoExec) {\n    debouncedEmit = debounce(emit, 1);\n    win[ADD_EVENT_LISTENER](POPSTATE, debouncedEmit);\n    win[ADD_EVENT_LISTENER](HASHCHANGE, debouncedEmit);\n    doc[ADD_EVENT_LISTENER](clickEvent, click);\n    if (autoExec)\n        emit(true);\n}","calling":["debounce","ADD_EVENT_LISTENER","emit"],"weight":3,"category":0,"name":"start"},{"calls":0,"declarations":1,"func":"function Router() {\n    this.$ = [];\n    riot.observable(this);\n    central.on('stop', this.s.bind(this));\n    central.on('emit', this.e.bind(this));\n}","calling":["observable","on","bind"],"weight":3,"category":1,"name":"Router"},{"calls":2,"declarations":1,"func":"function _parseExpr(expr, asText, qstr) {\n    if (expr[0] === '=')\n        expr = expr.slice(1);\n    expr = expr.replace(RE_QBLOCK, function (s, div) {\n        return s.length > 2 && !div ? '\\x01' + (qstr.push(s) - 1) + '~' : s;\n    }).replace(/\\s+/g, ' ').trim().replace(/\\ ?([[\\({},?\\.:])\\ ?/g, '$1');\n    if (expr) {\n        var list = [], cnt = 0, match;\n        while (expr && (match = expr.match(CS_IDENT)) && !match.index) {\n            var key, jsb, re = /,|([[{(])|$/g;\n            expr = RegExp.rightContext;\n            key = match[2] ? qstr[match[2]].slice(1, -1).trim().replace(/\\s+/g, ' ') : match[1];\n            while (jsb = (match = re.exec(expr))[1])\n                skipBraces(jsb, re);\n            jsb = expr.slice(0, match.index);\n            expr = RegExp.rightContext;\n            list[cnt++] = _wrapExpr(jsb, 1, key);\n        }\n        expr = !cnt ? _wrapExpr(expr, asText) : cnt > 1 ? '[' + list.join(',') + '].join(\" \").trim()' : list[0];\n    }\n    return expr;\n    function skipBraces(jsb, re) {\n        var match, lv = 1, ir = jsb === '(' ? /[()]/g : jsb === '[' ? /[[\\]]/g : /[{}]/g;\n        ir.lastIndex = re.lastIndex;\n        while (match = ir.exec(expr)) {\n            if (match[0] === jsb)\n                ++lv;\n            else if (!--lv)\n                break;\n        }\n        re.lastIndex = lv ? expr.length : ir.lastIndex;\n    }\n}","calling":["slice","replace","exec"],"weight":3,"category":0,"name":"_parseExpr"},{"calls":1,"declarations":1,"func":"function ie9elem(el, html, tagName, select) {\n    var div = mkEl(GENERIC), tag = select ? 'select>' : 'table>', child;\n    div.innerHTML = '<' + tag + html + '</' + tag;\n    child = $(tagName, div);\n    if (child)\n        el.appendChild(child);\n}","calling":["mkEl","$","appendChild"],"weight":3,"category":0,"name":"ie9elem"},{"calls":2,"declarations":1,"func":"function moveChildTag(tag, tagName, newPos) {\n    var parent = tag.parent, tags;\n    if (!parent)\n        return;\n    tags = parent.tags[tagName];\n    if (isArray(tags))\n        tags.splice(newPos, 0, tags.splice(tags.indexOf(tag), 1)[0]);\n    else\n        addChildTag(tag, tagName, parent);\n}","calling":["isArray","splice","addChildTag"],"weight":3,"category":0,"name":"moveChildTag"},{"calls":2,"declarations":1,"func":"function addVirtual(tag, src, target) {\n    var el = tag._root;\n    tag._virts = [];\n    while (el) {\n        var sib = el.nextSibling;\n        if (target)\n            src.insertBefore(el, target._root);\n        else\n            src.appendChild(el);\n        tag._virts.push(el);\n        el = sib;\n    }\n}","calling":["insertBefore","appendChild","push"],"weight":3,"category":0,"name":"addVirtual"},{"calls":1,"declarations":1,"func":"function initChildTag(child, opts, innerHTML, parent) {\n    var tag = new Tag(child, opts, innerHTML), tagName = getTagName(opts.root), ptag = getImmediateCustomParentTag(parent);\n    tag.parent = ptag;\n    tag._parent = parent;\n    addChildTag(tag, tagName, ptag);\n    if (ptag !== parent)\n        addChildTag(tag, tagName, parent);\n    opts.root.innerHTML = '';\n    return tag;\n}","calling":["getTagName","getImmediateCustomParentTag","addChildTag"],"weight":3,"category":0,"name":"initChildTag"},{"calls":1,"declarations":1,"func":"function replaceYield(tmpl, innerHTML) {\n    var tmplElement = mkElWithInnerHTML('div', tmpl);\n    if (tmplElement.querySelector && tmplElement.querySelector('yield[from]')) {\n        each(mkElWithInnerHTML('div', innerHTML).childNodes, function (toYield) {\n            if (toYield.nodeType == 1 && toYield.tagName == 'YIELD' && toYield.getAttribute('to')) {\n                each($$('yield[from=\"' + toYield.getAttribute('to') + '\"]', tmplElement), function (fromYield) {\n                    fromYield.outerHTML = toYield.innerHTML;\n                });\n            }\n        });\n        return tmplElement.innerHTML;\n    } else\n        return tmpl.replace(/<yield\\s*(?:\\/>|>\\s*<\\/yield\\s*>)/gi, innerHTML || '');\n}","calling":["mkElWithInnerHTML","querySelector","replace"],"weight":3,"category":0,"name":"replaceYield"},{"calls":2,"declarations":1,"func":"function updateOpts() {\n    var ctx = hasImpl && isLoop ? self : parent || self;\n    each(root.attributes, function (el) {\n        opts[toCamel(el.name)] = tmpl(el.value, ctx);\n    });\n    each(Object.keys(attr), function (name) {\n        opts[toCamel(name)] = tmpl(attr[name], ctx);\n    });\n}","calling":["each","tmpl","keys"],"weight":3,"category":0,"name":"updateOpts"},{"calls":1,"declarations":1,"func":"function inheritFromParent() {\n    if (!self.parent || !isLoop)\n        return;\n    each(Object.keys(self.parent), function (k) {\n        var mustSync = !contains(RESERVED_WORDS_BLACKLIST, k) && contains(propsInSyncWithParent, k);\n        if (typeof self[k] === T_UNDEF || mustSync) {\n            if (!mustSync)\n                propsInSyncWithParent.push(k);\n            self[k] = self.parent[k];\n        }\n    });\n}","calling":["each","keys","contains"],"weight":3,"category":0,"name":"inheritFromParent"},{"calls":1,"declarations":1,"func":"function walkAttributes(html, fn) {\n    var m, re = /([-\\w]+) ?= ?(?:\"([^\"]*)|'([^']*)|({[^}]*}))/g;\n    while (m = re.exec(html)) {\n        fn(m[1].toLowerCase(), m[2] || m[3] || m[4]);\n    }\n}","calling":["fn","toLowerCase","exec"],"weight":3,"category":0,"name":"walkAttributes"},{"calls":14,"declarations":1,"func":"function defineProperty(el, key, value, options) {\n    Object.defineProperty(el, key, extend({\n        value: value,\n        enumerable: false,\n        writable: false,\n        configurable: false\n    }, options));\n    return el;\n}","calling":["defineProperty","extend"],"weight":2,"category":0,"name":"defineProperty"},{"calls":5,"declarations":1,"func":"function on() {\n    el.off(events, on);\n    fn.apply(el, arguments);\n}","calling":["off","apply"],"weight":2,"category":0,"name":"on"},{"calls":0,"declarations":1,"func":"function DEFAULT_SECOND_PARSER(path, filter) {\n    var re = new RegExp('^' + filter[REPLACE](/\\*/g, '([^/?#]+?)')[REPLACE](/\\.\\./, '.*') + '$'), args = path.match(re);\n    if (args)\n        return args.slice(1);\n}","calling":["match","slice"],"weight":2,"category":0,"name":"DEFAULT_SECOND_PARSER"},{"calls":1,"declarations":1,"func":"function debounce(fn, delay) {\n    var t;\n    return function () {\n        clearTimeout(t);\n        t = setTimeout(fn, delay);\n    };\n}","calling":["clearTimeout","setTimeout"],"weight":2,"category":0,"name":"debounce"},{"calls":3,"declarations":1,"func":"function emit(force) {\n    var isRoot = emitStackLevel == 0;\n    if (MAX_EMIT_STACK_LEVEL <= emitStackLevel)\n        return;\n    emitStackLevel++;\n    emitStack.push(function () {\n        var path = getPathFromBase();\n        if (force || path != current) {\n            central[TRIGGER]('emit', path);\n            current = path;\n        }\n    });\n    if (isRoot) {\n        while (emitStack.length) {\n            emitStack[0]();\n            emitStack.shift();\n        }\n        emitStackLevel = 0;\n    }\n}","calling":["push","getPathFromBase"],"weight":2,"category":0,"name":"emit"},{"calls":0,"declarations":1,"func":"function click(e) {\n    if (e.which != 1 || e.metaKey || e.ctrlKey || e.shiftKey || e.defaultPrevented)\n        return;\n    var el = e.target;\n    while (el && el.nodeName != 'A')\n        el = el.parentNode;\n    if (!el || el.nodeName != 'A' || el[HAS_ATTRIBUTE]('download') || !el[HAS_ATTRIBUTE]('href') || el.target && el.target != '_self' || el.href.indexOf(loc.href.match(RE_ORIGIN)[0]) == -1)\n        return;\n    if (el.href != loc.href) {\n        if (el.href.split('#')[0] == loc.href.split('#')[0] || base != '#' && getPathFromRoot(el.href).indexOf(base) !== 0 || !go(getPathFromBase(el.href), el.title || doc.title))\n            return;\n    }\n    e.preventDefault();\n}","calling":["HAS_ATTRIBUTE","preventDefault"],"weight":2,"category":0,"name":"click"},{"calls":2,"declarations":1,"func":"function go(path, title) {\n    title = title || doc.title;\n    history.pushState(null, title, base + normalize(path));\n    doc.title = title;\n    routeFound = false;\n    emit();\n    return routeFound;\n}","calling":["pushState","emit"],"weight":2,"category":0,"name":"go"},{"calls":2,"declarations":1,"func":"function unescapeStr(str) {\n    if (tmpl || isexpr)\n        parts.push(str && str.replace(_bp[5], '$1'));\n    else\n        parts.push(str);\n}","calling":["push","replace"],"weight":2,"category":0,"name":"unescapeStr"},{"calls":0,"declarations":1,"func":"function _setSettings(o) {\n    var b;\n    o = o || {};\n    b = o.brackets;\n    Object.defineProperty(o, 'brackets', {\n        set: _reset,\n        get: function () {\n            return cachedBrackets;\n        },\n        enumerable: true\n    });\n    _settings = o;\n    _reset(b);\n}","calling":["defineProperty","_reset"],"weight":2,"category":0,"name":"_setSettings"},{"calls":1,"declarations":1,"func":"function _getTmpl(str) {\n    var qstr = [], expr, parts = brackets.split(str.replace(/\\u2057/g, '\"'), 1);\n    if (parts.length > 2 || parts[0]) {\n        var i, j, list = [];\n        for (i = j = 0; i < parts.length; ++i) {\n            expr = parts[i];\n            if (expr && (expr = i & 1 ? _parseExpr(expr, 1, qstr) : '\"' + expr.replace(/\\\\/g, '\\\\\\\\').replace(/\\r\\n?|\\n/g, '\\\\n').replace(/\"/g, '\\\\\"') + '\"'))\n                list[j++] = expr;\n        }\n        expr = j < 2 ? list[0] : '[' + list.join(',') + '].join(\"\")';\n    } else {\n        expr = _parseExpr(parts[1], 0, qstr);\n    }\n    if (qstr[0])\n        expr = expr.replace(RE_QBMARK, function (_, pos) {\n            return qstr[pos].replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n');\n        });\n    return expr;\n}","calling":["split","replace"],"weight":2,"category":0,"name":"_getTmpl"},{"calls":1,"declarations":1,"func":"function unmountRedundant(items, tags) {\n    var i = tags.length, j = items.length;\n    while (i > j) {\n        var t = tags[--i];\n        tags.splice(i, 1);\n        t.unmount();\n    }\n}","calling":["splice","unmount"],"weight":2,"category":0,"name":"unmountRedundant"},{"calls":2,"declarations":1,"func":"function getTagName(dom) {\n    var child = getTag(dom), namedTag = getAttr(dom, 'name'), tagName = namedTag && !tmpl.hasExpr(namedTag) ? namedTag : child ? child.name : dom.tagName.toLowerCase();\n    return tagName;\n}","calling":["getTag","getAttr"],"weight":2,"category":0,"name":"getTagName"},{"calls":2,"declarations":1,"func":"function toCamel(string) {\n    return string.replace(/-(\\w)/g, function (_, c) {\n        return c.toUpperCase();\n    });\n}","calling":["replace","toUpperCase"],"weight":2,"category":0,"name":"toCamel"},{"calls":2,"declarations":1,"func":"function toggle(isMount) {\n    each(childTags, function (child) {\n        child[isMount ? 'mount' : 'unmount']();\n    });\n    if (parent) {\n        var evt = isMount ? 'on' : 'off';\n        if (isLoop)\n            parent[evt]('unmount', self.unmount);\n        else\n            parent[evt]('update', self.update)[evt]('unmount', self.unmount);\n    }\n}","calling":["each",null],"weight":2,"category":0,"name":"toggle"},{"calls":1,"declarations":1,"func":"function setEventHandler(name, handler, dom, tag) {\n    dom[name] = function (e) {\n        var ptag = tag._parent, item = tag._item, el;\n        if (!item)\n            while (ptag && !item) {\n                item = ptag._item;\n                ptag = ptag._parent;\n            }\n        e = e || window.event;\n        if (isWritable(e, 'currentTarget'))\n            e.currentTarget = dom;\n        if (isWritable(e, 'target'))\n            e.target = e.srcElement;\n        if (isWritable(e, 'which'))\n            e.which = e.charCode || e.keyCode;\n        e.item = item;\n        if (handler.call(tag, e) !== true && !/radio|check/.test(dom.type)) {\n            if (e.preventDefault)\n                e.preventDefault();\n            e.returnValue = false;\n        }\n        if (!e.preventUpdate) {\n            el = item ? getImmediateCustomParentTag(ptag) : tag;\n            el.update();\n        }\n    };\n}","calling":["isWritable","test"],"weight":2,"category":0,"name":"setEventHandler"},{"calls":0,"declarations":1,"func":"function DEFAULT_PARSER(path) {\n    return path.split(/[\\/?#]/);\n}","calling":["split"],"weight":1,"category":0,"name":"DEFAULT_PARSER"},{"calls":4,"declarations":1,"func":"function normalize(path) {\n    return path[REPLACE](/^\\/|\\/$/, '');\n}","calling":["REPLACE"],"weight":1,"category":0,"name":"normalize"},{"calls":2,"declarations":1,"func":"function getPathFromRoot(href) {\n    return (href || loc.href)[REPLACE](RE_ORIGIN, '');\n}","calling":["REPLACE"],"weight":1,"category":0,"name":"getPathFromRoot"},{"calls":2,"declarations":2,"func":"function skipBraces(jsb, re) {\n    var match, lv = 1, ir = jsb === '(' ? /[()]/g : jsb === '[' ? /[[\\]]/g : /[{}]/g;\n    ir.lastIndex = re.lastIndex;\n    while (match = ir.exec(expr)) {\n        if (match[0] === jsb)\n            ++lv;\n        else if (!--lv)\n            break;\n    }\n    re.lastIndex = lv ? expr.length : ir.lastIndex;\n}","calling":["exec"],"weight":1,"category":0,"name":"skipBraces"},{"calls":0,"declarations":1,"func":"function _tmpl(str, data) {\n    if (!str)\n        return str;\n    return (_cache[str] || (_cache[str] = _create(str))).call(data, _logErr);\n}","calling":["call"],"weight":1,"category":0,"name":"_tmpl"},{"calls":2,"declarations":1,"func":"function _wrapExpr(expr, asText, key) {\n    var tb;\n    expr = expr.replace(JS_VARNAME, function (match, p, mvar, pos, s) {\n        if (mvar) {\n            pos = tb ? 0 : pos + match.length;\n            if (mvar !== 'this' && mvar !== 'global' && mvar !== 'window') {\n                match = p + '(\"' + mvar + JS_CONTEXT + mvar;\n                if (pos)\n                    tb = (s = s[pos]) === '.' || s === '(' || s === '[';\n            } else if (pos)\n                tb = !/^(?=(\\.[$\\w]+))\\1(?:[^.[(]|$)/.test(s.slice(pos));\n        }\n        return match;\n    });\n    if (tb) {\n        expr = 'try{return ' + expr + '}catch(e){E(e,this)}';\n    }\n    if (key) {\n        expr = (tb ? 'function(){' + expr + '}.call(this)' : '(' + expr + ')') + '?\"' + key + '\":\"\"';\n    } else if (asText) {\n        expr = 'function(v){' + (tb ? expr.replace('return ', 'v=') : 'v=(' + expr + ')') + ';return v||v===0?v:\"\"}.call(this)';\n    }\n    return expr;\n}","calling":["replace"],"weight":1,"category":0,"name":"_wrapExpr"},{"calls":4,"declarations":1,"func":"function mkEl(name) {\n    return document.createElement(name);\n}","calling":["createElement"],"weight":1,"category":0,"name":"mkEl"},{"calls":2,"declarations":1,"func":"function $(selector, ctx) {\n    return (ctx || document).querySelector(selector);\n}","calling":["querySelector"],"weight":1,"category":0,"name":"$"},{"calls":7,"declarations":1,"func":"function isArray(a) {\n    return Array.isArray(a) || a instanceof Array;\n}","calling":["isArray"],"weight":1,"category":0,"name":"isArray"},{"calls":1,"declarations":1,"func":"function moveVirtual(tag, src, target, len) {\n    var el = tag._root;\n    for (var i = 0; i < len; i++) {\n        var sib = el.nextSibling;\n        src.insertBefore(el, target._root);\n        el = sib;\n    }\n}","calling":["insertBefore"],"weight":1,"category":0,"name":"moveVirtual"},{"calls":5,"declarations":1,"func":"function remAttr(dom, name) {\n    dom.removeAttribute(name);\n}","calling":["removeAttribute"],"weight":1,"category":0,"name":"remAttr"},{"calls":8,"declarations":1,"func":"function getAttr(dom, name) {\n    return dom.getAttribute(name);\n}","calling":["getAttribute"],"weight":1,"category":0,"name":"getAttr"},{"calls":2,"declarations":1,"func":"function parseNamedElements(root, tag, childTags, forceParsingNamed) {\n    walk(root, function (dom) {\n        if (dom.nodeType == 1) {\n            dom.isLoop = dom.isLoop || (dom.parentNode && dom.parentNode.isLoop || getAttr(dom, 'each')) ? 1 : 0;\n            if (childTags) {\n                var child = getTag(dom);\n                if (child && !dom.isLoop)\n                    childTags.push(initChildTag(child, {\n                        root: dom,\n                        parent: tag\n                    }, dom.innerHTML, tag));\n            }\n            if (!dom.isLoop || forceParsingNamed)\n                setNamed(dom, tag, []);\n        }\n    });\n}","calling":["walk"],"weight":1,"category":0,"name":"parseNamedElements"},{"calls":2,"declarations":1,"func":"function addExpr(dom, val, extra) {\n    if (tmpl.hasExpr(val)) {\n        var expr = {\n            dom: dom,\n            expr: val\n        };\n        expressions.push(extend(expr, extra));\n    }\n}","calling":["hasExpr"],"weight":1,"category":0,"name":"addExpr"},{"calls":2,"declarations":1,"func":"function cleanUpData(data) {\n    if (!(data instanceof Tag) && !(data && typeof data.trigger == T_FUNCTION))\n        return data;\n    var o = {};\n    for (var key in data) {\n        if (!contains(RESERVED_WORDS_BLACKLIST, key))\n            o[key] = data[key];\n    }\n    return o;\n}","calling":["contains"],"weight":1,"category":0,"name":"cleanUpData"},{"calls":1,"declarations":1,"func":"function normalizeData(data) {\n    for (var key in item) {\n        if (typeof self[key] !== T_UNDEF && isWritable(self, key))\n            self[key] = data[key];\n    }\n}","calling":["isWritable"],"weight":1,"category":0,"name":"normalizeData"},{"calls":5,"declarations":1,"func":"function isWritable(obj, key) {\n    var props = Object.getOwnPropertyDescriptor(obj, key);\n    return typeof obj[key] === T_UNDEF || props && props.writable;\n}","calling":["getOwnPropertyDescriptor"],"weight":1,"category":0,"name":"isWritable"},{"calls":7,"declarations":1,"func":"function contains(arr, item) {\n    return ~arr.indexOf(item);\n}","calling":["indexOf"],"weight":1,"category":0,"name":"contains"},{"calls":5,"declarations":1,"func":"function setAttr(dom, name, val) {\n    dom.setAttribute(name, val);\n}","calling":["setAttribute"],"weight":1,"category":0,"name":"setAttr"},{"calls":3,"declarations":1,"func":"function getImmediateCustomParentTag(tag) {\n    var ptag = tag;\n    while (!getTag(ptag.root)) {\n        if (!ptag.parent)\n            break;\n        ptag = ptag.parent;\n    }\n    return ptag;\n}","calling":["getTag"],"weight":1,"category":0,"name":"getImmediateCustomParentTag"},{"calls":2,"declarations":1,"func":"function mkElWithInnerHTML(name, innerHTML) {\n    var el = mkEl(name);\n    el.innerHTML = innerHTML || '';\n    return el;\n}","calling":["mkEl"],"weight":1,"category":0,"name":"mkElWithInnerHTML"},{"calls":4,"declarations":1,"func":"function $$(selector, ctx) {\n    return (ctx || document).querySelectorAll(selector);\n}","calling":["querySelectorAll"],"weight":1,"category":0,"name":"$$"},{"calls":2,"declarations":1,"func":"function getNamedKey(dom) {\n    return getAttr(dom, 'id') || getAttr(dom, 'name');\n}","calling":["getAttr"],"weight":1,"category":0,"name":"getNamedKey"},{"calls":2,"declarations":1,"func":"function addRiotTags(arr) {\n    var list = '';\n    each(arr, function (e) {\n        list += ', *[' + RIOT_TAG + '=\"' + e.trim() + '\"]';\n    });\n    return list;\n}","calling":["each"],"weight":1,"category":0,"name":"addRiotTags"},{"calls":2,"declarations":1,"func":"function selectAllTags() {\n    var keys = Object.keys(__tagImpl);\n    return keys + addRiotTags(keys);\n}","calling":["keys"],"weight":1,"category":0,"name":"selectAllTags"},{"calls":1,"declarations":1,"func":"function pushTags(root) {\n    var last;\n    if (root.tagName) {\n        if (tagName && (!(last = getAttr(root, RIOT_TAG)) || last != tagName))\n            setAttr(root, RIOT_TAG, tagName);\n        var tag = mountTo(root, tagName || root.getAttribute(RIOT_TAG) || root.tagName.toLowerCase(), opts);\n        if (tag)\n            tags.push(tag);\n    } else if (root.length)\n        each(root, pushTags);\n}","calling":["each"],"weight":1,"category":0,"name":"pushTags"},{"calls":21,"declarations":0,"func":"","calling":[],"weight":0,"category":0,"name":"replace"}]